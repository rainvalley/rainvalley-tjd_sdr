diff --git a/Makefile b/Makefile
index 0dc9c4b..41829b4 100644
--- a/Makefile
+++ b/Makefile
@@ -16,6 +16,8 @@ UBOOT_VERSION=$(shell echo -n "PlutoSDR " && cd u-boot-xlnx && git describe --ab
 HAVE_VIVADO= $(shell bash -c "source $(VIVADO_SETTINGS) > /dev/null 2>&1 && vivado -version > /dev/null 2>&1 && echo 1 || echo 0")
 XSA_URL ?= http://github.com/analogdevicesinc/plutosdr-fw/releases/download/${LATEST_TAG}/system_top.xsa
 
+# $(error *** Makefile say the VIVADO is : $(HAVE_VIVADO))
+
 ifeq (1, ${HAVE_VIVADO})
 	VIVADO_INSTALL= $(shell bash -c "source $(VIVADO_SETTINGS) > /dev/null 2>&1 && vivado -version | head -1 | awk '{print $2}'")
 	ifeq (, $(findstring $(VIVADO_VERSION), $(VIVADO_INSTALL)))
@@ -27,8 +29,10 @@ $(error "      3] export VIVADO_VERSION=v20xx.x")
 	endif
 endif
 
-TARGET ?= pluto
-SUPPORTED_TARGETS:=pluto sidekiqz2
+TARGET ?= tjd
+TARGET_BOARD := $(TARGET)-sdr
+SUPPORTED_TARGETS:=pluto tjd sidekiqz2
+SDIMGDIR = $(CURDIR)/build_sdimg
 
 # Include target specific constants
 include scripts/$(TARGET).mk
@@ -48,7 +52,7 @@ endif
 
 ifeq ($(findstring $(TARGET),$(SUPPORTED_TARGETS)),)
 all:
-	@echo "Invalid `TARGET variable ; valid values are: pluto, sidekiqz2" &&
+	@echo "Invalid `TARGET variable ; valid values are: pluto, sidekiqz2, tjd" &&
 	exit 1
 else
 all: clean-build $(TARGETS) zip-all legal-info
@@ -91,16 +95,23 @@ build/uboot-env.bin: build/uboot-env.txt
 linux/arch/arm/boot/zImage: TOOLCHAIN
 	$(TOOLS_PATH) make -C linux ARCH=arm CROSS_COMPILE=$(CROSS_COMPILE) zynq_$(TARGET)_defconfig
 	$(TOOLS_PATH) make -C linux -j $(NCORES) ARCH=arm CROSS_COMPILE=$(CROSS_COMPILE) zImage UIMAGE_LOADADDR=0x8000
+ 
+linux/arch/arm/boot/uImage: TOOLCHAIN
+	$(TOOLS_PATH) make -C linux ARCH=arm CROSS_COMPILE=$(CROSS_COMPILE) zynq_$(TARGET)_defconfig
+	$(TOOLS_PATH) make -C linux -j $(NCORES) ARCH=arm CROSS_COMPILE=$(CROSS_COMPILE) uImage UIMAGE_LOADADDR=0x8000
 
 .PHONY: linux/arch/arm/boot/zImage
-
+.PHONY: linux/arch/arm/boot/uImage
 
 build/zImage: linux/arch/arm/boot/zImage | build
 	cp $< $@
 
+build/uImage: linux/arch/arm/boot/uImage | build
+	cp $< $@
+
 ### Device Tree ###
 
-linux/arch/arm/boot/dts/%.dtb: TOOLCHAIN linux/arch/arm/boot/dts/%.dts  linux/arch/arm/boot/dts/zynq-pluto-sdr.dtsi
+linux/arch/arm/boot/dts/%.dtb: TOOLCHAIN linux/arch/arm/boot/dts/%.dts  linux/arch/arm/boot/dts/zynq-tjd-sdr.dtsi
 	$(TOOLS_PATH) DTC_FLAGS=-@ make -C linux -j $(NCORES) ARCH=arm CROSS_COMPILE=$(CROSS_COMPILE) $(notdir $@)
 
 build/%.dtb: linux/arch/arm/boot/dts/%.dtb | build
@@ -126,12 +137,16 @@ endif
 build/rootfs.cpio.gz: buildroot/output/images/rootfs.cpio.gz | build
 	cp $< $@
 
-build/$(TARGET).itb: u-boot-xlnx/tools/mkimage build/zImage build/rootfs.cpio.gz $(TARGET_DTS_FILES) build/system_top.bit
+build/$(TARGET).itb: u-boot-xlnx/tools/mkimage build/zImage build/uImage build/rootfs.cpio.gz $(TARGET_DTS_FILES) build/system_top.bit
 	u-boot-xlnx/tools/mkimage -f scripts/$(TARGET).its $@
 
 build/system_top.xsa:  | build
 ifeq (1, ${HAVE_VIVADO})
-	bash -c "source $(VIVADO_SETTINGS) && make -C hdl/projects/$(TARGET) && cp hdl/projects/$(TARGET)/$(TARGET).sdk/system_top.xsa $@"
+ifneq (tjd,${TARGET})
+	echo "Target is not tjd_sdr!"
+	bash -c "source $(VIVADO_SETTINGS) && make -C hdl/projects/$(TARGET)"
+endif
+	bash -c "cp hdl/projects/$(TARGET)/$(TARGET).sdk/system_top.xsa $@"
 	unzip -l $@ | grep -q ps7_init || cp hdl/projects/$(TARGET)/$(TARGET).srcs/sources_1/bd/system/ip/system_sys_ps7_0/ps7_init* build/
 else ifneq ($(XSA_FILE),)
 	cp $(XSA_FILE) $@
@@ -177,6 +192,7 @@ build/$(TARGET).dfu: build/$(TARGET).itb
 clean-build:
 	rm -f $(notdir $(wildcard build/*))
 	rm -rf build/*
+	rm -rf build_sdimg/*
 
 clean:
 	make -C u-boot-xlnx clean
@@ -185,6 +201,7 @@ clean:
 	make -C hdl clean
 	rm -f $(notdir $(wildcard build/*))
 	rm -rf build/*
+	rm -rf build_sdimg/*
 
 zip-all: $(TARGETS)
 	zip -j build/$(ZIP_ARCHIVE_PREFIX)-fw-$(VERSION).zip $^
@@ -230,3 +247,24 @@ git-update-all:
 
 git-pull:
 	git pull --recurse-submodules
+
+sdimg: build/
+	rm -rf $(SDIMGDIR)
+	mkdir $(SDIMGDIR)
+	cp build/sdk/fsbl/Release/fsbl.elf 	$(SDIMGDIR)/fsbl.elf  
+	cp build/sdk/system_top/hw/system_top.bit 	$(SDIMGDIR)/system_top.bit
+	cp build/u-boot.elf 			$(SDIMGDIR)/u-boot.elf
+	cp build/uImage	$(SDIMGDIR)/uImage
+	cp build/zynq-$(TARGET_BOARD).dtb 	$(SDIMGDIR)/devicetree.dtb
+	cp build/uboot-env.txt  		$(SDIMGDIR)/uEnv.txt
+	cp build/rootfs.cpio.gz  		$(SDIMGDIR)/ramdisk.image.gz
+	mkimage -A arm -T ramdisk -C gzip -d $(SDIMGDIR)/ramdisk.image.gz $(SDIMGDIR)/uramdisk.image.gz
+	touch 	$(SDIMGDIR)/boot.bif
+	echo "img : {[bootloader] $(SDIMGDIR)/fsbl.elf  $(SDIMGDIR)/system_top.bit  $(SDIMGDIR)/u-boot.elf}" >  $(SDIMGDIR)/boot.bif
+	bash -c "source $(VIVADO_SETTINGS) && bootgen -image $(SDIMGDIR)/boot.bif -arch zynq -o $(SDIMGDIR)/BOOT.bin"
+	rm $(SDIMGDIR)/fsbl.elf
+	rm $(SDIMGDIR)/system_top.bit
+	rm $(SDIMGDIR)/u-boot.elf
+	rm $(SDIMGDIR)/ramdisk.image.gz 
+	rm $(SDIMGDIR)/boot.bif
+
diff --git a/buildroot b/buildroot
index f70f4af..ed398ca 160000
--- a/buildroot
+++ b/buildroot
@@ -1 +1 @@
-Subproject commit f70f4aff40bcc16e3d9a920984d034ad108f4993
+Subproject commit ed398ca7811f463dd9f7fe1e8b59e9c3d4bea361
diff --git a/linux b/linux
index e14e351..4585f27 160000
--- a/linux
+++ b/linux
@@ -1 +1 @@
-Subproject commit e14e351533f934047ba0473e836e561682ec67fe
+Subproject commit 4585f271fa146d075e524624360cb5e6ff5c0819
diff --git a/scripts/tjd.its b/scripts/tjd.its
new file mode 100644
index 0000000..cb716e4
--- /dev/null
+++ b/scripts/tjd.its
@@ -0,0 +1,174 @@
+/*
+ * U-Boot uImage source file with multiple kernels, ramdisks and FDT blobs
+ * This example makes use of the 'loadables' field
+ */
+
+/*
+ * fdt get addr foo /images/fdt@1 data
+ */
+
+/dts-v1/;
+
+/ {
+	description = "Configuration to load fpga before Kernel";
+	magic = "ITB PlutoSDR (ADALM-PLUTO)";
+	#address-cells = <1>;
+	images {
+
+		fdt@1 {
+			description = "zynq-tjd-sdr";
+			data = /incbin/("../build/zynq-tjd-sdr.dtb");
+			type = "flat_dt";
+			arch = "arm";
+			compression = "none";
+		};
+
+		fdt@2 {
+			description = "zynq-tjd-sdr";
+			data = /incbin/("../build/zynq-tjd-sdr.dtb");
+			type = "flat_dt";
+			arch = "arm";
+			compression = "none";
+		};
+
+		fdt@3 {
+			description = "zynq-tjd-sdr";
+			data = /incbin/("../build/zynq-tjd-sdr.dtb");
+			type = "flat_dt";
+			arch = "arm";
+			compression = "none";
+		};
+
+		fpga@1 {
+			description = "FPGA";
+			data = /incbin/("../build/system_top.bit");
+			type = "fpga";
+			arch = "arm";
+			compression = "none";
+			load = <0xF000000>;
+			hash@1 {
+				algo = "md5";
+			};
+		};
+
+		linux_kernel@1 {
+			description = "Linux";
+			data = /incbin/("../build/zImage");
+			type = "kernel";
+			arch = "arm";
+			os = "linux";
+			compression = "none";
+			load = <0x8000>;
+			entry = <0x8000>;
+			hash@1 {
+				algo = "md5";
+			};
+		};
+		ramdisk@1 {
+			description = "Ramdisk";
+			data = /incbin/("../build/rootfs.cpio.gz");
+			type = "ramdisk";
+			arch = "arm";
+			os = "linux";
+			compression = "gzip";
+			hash@1 {
+				algo = "md5";
+			};
+		};
+
+	};
+
+	configurations {
+		default = "config@0";
+		config@0 {
+			description = "Linux with fpga RevA";
+			fdt = "fdt@1";
+			kernel = "linux_kernel@1";
+			ramdisk = "ramdisk@1";
+			fpga = "fpga@1";
+		};
+
+		/* all below is currently RevB ! */
+
+		config@1 {
+			description = "Linux with fpga RevB";
+			fdt = "fdt@2";
+			kernel = "linux_kernel@1";
+			ramdisk = "ramdisk@1";
+			fpga = "fpga@1";
+		};
+
+		config@2 {
+			description = "Linux with fpga RevB";
+			fdt = "fdt@2";
+			kernel = "linux_kernel@1";
+			ramdisk = "ramdisk@1";
+			fpga = "fpga@1";
+		};
+
+		config@3 {
+			description = "Linux with fpga RevB";
+			fdt = "fdt@2";
+			kernel = "linux_kernel@1";
+			ramdisk = "ramdisk@1";
+			fpga = "fpga@1";
+		};
+
+		config@4 {
+			description = "Linux with fpga RevB";
+			fdt = "fdt@2";
+			kernel = "linux_kernel@1";
+			ramdisk = "ramdisk@1";
+			fpga = "fpga@1";
+		};
+
+		config@5 {
+			description = "Linux with fpga RevB";
+			fdt = "fdt@2";
+			kernel = "linux_kernel@1";
+			ramdisk = "ramdisk@1";
+			fpga = "fpga@1";
+		};
+
+		config@6 {
+			description = "Linux with fpga RevB";
+			fdt = "fdt@2";
+			kernel = "linux_kernel@1";
+			ramdisk = "ramdisk@1";
+			fpga = "fpga@1";
+		};
+
+
+		config@7 {
+			description = "Linux with fpga RevB";
+			fdt = "fdt@2";
+			kernel = "linux_kernel@1";
+			ramdisk = "ramdisk@1";
+			fpga = "fpga@1";
+		};
+
+		config@8 { /* This one is actually RevC */
+			description = "Linux with fpga RevC";
+			fdt = "fdt@3";
+			kernel = "linux_kernel@1";
+			ramdisk = "ramdisk@1";
+			fpga = "fpga@1";
+		};
+
+		config@9 { /* This one is actually RevB */
+			description = "Linux with fpga RevB";
+			fdt = "fdt@2";
+			kernel = "linux_kernel@1";
+			ramdisk = "ramdisk@1";
+			fpga = "fpga@1";
+		};
+
+		config@10 {
+			description = "Linux with fpga RevB";
+			fdt = "fdt@2";
+			kernel = "linux_kernel@1";
+			ramdisk = "ramdisk@1";
+			fpga = "fpga@1";
+		};
+	};
+};
diff --git a/scripts/tjd.mk b/scripts/tjd.mk
new file mode 100644
index 0000000..739a7fd
--- /dev/null
+++ b/scripts/tjd.mk
@@ -0,0 +1,10 @@
+
+# Target specific constants go here
+
+HDF_URL:=http://github.com/analogdevicesinc/plutosdr-fw/releases/download/${LATEST_TAG}/system_top.hdf
+TARGET_DTS_FILES:= zynq-tjd-sdr.dtb
+COMPLETE_NAME:=tjd_sdr
+ZIP_ARCHIVE_PREFIX:=tjd_sdr
+DEVICE_VID:=0x0456
+DEVICE_PID:=0xb673
+
diff --git a/setup_env.sh b/setup_env.sh
index 1422eb2..bab268c 100755
--- a/setup_env.sh
+++ b/setup_env.sh
@@ -3,7 +3,7 @@
 # print out a few things to make it easier for people to set up their environment
 #
 
-PREFIX=/opt/Xilinx
+PREFIX=/tools/Xilinx
 
 XILINX_REV=$(grep -e "set[[:space:]]*REQUIRED_VIVADO_VERSION" $(find ./hdl -name adi_project_xilinx.tcl) | awk '{print $NF}' | sed 's/"//g')
 echo trying to find Vivado $XILINX_REV
diff --git a/u-boot-xlnx b/u-boot-xlnx
index 90401ce..0db7307 160000
--- a/u-boot-xlnx
+++ b/u-boot-xlnx
@@ -1 +1 @@
-Subproject commit 90401ce9ce029e5563f4dface63914d42badf5bc
+Subproject commit 0db7307a4877cc7a3189a6352e87660abb8eed24
diff --git a/vivado.jou b/vivado.jou
new file mode 100644
index 0000000..0ac8aa3
--- /dev/null
+++ b/vivado.jou
@@ -0,0 +1,46 @@
+#-----------------------------------------------------------
+# Vivado v2022.2 (64-bit)
+# SW Build 3671981 on Fri Oct 14 04:59:54 MDT 2022
+# IP Build 3669848 on Fri Oct 14 08:30:02 MDT 2022
+# Start of session at: Wed Feb  7 19:15:16 2024
+# Process ID: 9436
+# Current directory: /home/raincorn/pluto/plutosdr-fw
+# Command line: vivado
+# Log file: /home/raincorn/pluto/plutosdr-fw/vivado.log
+# Journal file: /home/raincorn/pluto/plutosdr-fw/vivado.jou
+# Running On: ubuntu, OS: Linux, CPU Frequency: 3792.876 MHz, CPU Physical cores: 16, Host memory: 8280 MB
+#-----------------------------------------------------------
+start_gui
+open_project /home/raincorn/pluto/plutosdr-fw/hdl/projects/tjd/tjd.xpr
+update_compile_order -fileset sources_1
+reset_run synth_1
+reset_run system_logic_or_1_0_synth_1
+reset_run system_fir_interpolation_1_0_synth_1
+reset_run system_logic_and_1_0_synth_1
+reset_run system_out_mux_0_0_synth_1
+reset_run system_out_mux_1_0_synth_1
+reset_run system_rate_gen_0_synth_1
+reset_run system_cdc_sync_active_1_synth_1
+reset_run system_fir_decimation_0_0_synth_1
+reset_run system_fir_decimation_1_0_synth_1
+reset_run system_out_mux_0_1_synth_1
+reset_run system_out_mux_1_1_synth_1
+reset_run system_tdd_core_0_synth_1
+reset_run system_sys_ps7_0_synth_1
+reset_run system_tx_upack_0_synth_1
+reset_run system_axi_ad9361_0_synth_1
+reset_run system_cpack_0_synth_1
+reset_run system_logic_inv_0_synth_1
+reset_run system_logic_or_0_synth_1
+reset_run system_sys_rstgen_0_synth_1
+reset_run system_axi_ad9361_adc_dma_0_synth_1
+reset_run system_auto_pc_0_synth_1
+reset_run system_xbar_0_synth_1
+reset_run system_axi_ad9361_dac_dma_0_synth_1
+reset_run system_axi_spi_0_synth_1
+reset_run system_axi_iic_main_0_synth_1
+reset_run system_fir_interpolation_0_0_synth_1
+reset_run system_cdc_sync_active_0_synth_1
+reset_run system_logic_and_0_0_synth_1
+launch_runs impl_1 -to_step write_bitstream -jobs 16
+wait_on_run impl_1
